name: Deploy to GitHub Pages

# Dispara o workflow em pushes para a branch 'main'
on:
  push:
    branches:
      - main # Mude para 'master' ou sua branch principal, se for diferente

# Define permissões para o job de deploy poder interagir com o GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    # Se você usou um "Environment Secret" no Passo 3A e criou um ambiente chamado 'github-pages'
    environment:
      name: github-pages # Certifique-se que este é o nome do ambiente que você criou
      url: ${{ steps.deployment.outputs.page_url }} # Define a URL de deploy após o sucesso

    runs-on: ubuntu-latest # Usa a última versão estável do Ubuntu como ambiente de execução

    steps:
      - name: Checkout code # Ação para baixar o código do seu repositório
        uses: actions/checkout@v4

      - name: Replace API Key Placeholder # Substitui o placeholder no seu arquivo JavaScript
        # Certifique-se que o nome do segredo 'OPENROUTER_API_KEY_FOR_PAGES' é o mesmo do Passo 3
        # O valor do segredo deve ser uma string JSON com todas as suas chaves (ex: '["chave1", "chave2"]')
        run: |
          echo "Tentando substituir o placeholder no arquivo JavaScript principal..."
          # ATENÇÃO: Substitua 'js/main.js' pelo caminho real do seu arquivo JavaScript principal.
          # Ex: se seu arquivo principal for 'script.js' na raiz, use 'script.js'.
          # Se for 'src/app.js', use 'src/app.js'.
          FILE_PATH="js/main.js" # <-- AJUSTE ESTE CAMINHO SE SEU ARQUIVO JS ESTIVER EM OUTRO LUGAR

          if [ -f "$FILE_PATH" ]; then
            # Substitui o placeholder no arquivo.
            # O 'sed -i' edita o arquivo no lugar.
            sed -i "s|%%OPENROUTER_API_KEY_PLACEHOLDER%%|${{ secrets.OPENROUTER_API_KEY_FOR_PAGES }}|g" "$FILE_PATH"
            echo "Substituição do placeholder concluída em $FILE_PATH."
          else
            echo "Erro: O arquivo $FILE_PATH não foi encontrado!"
            echo "Verifique o caminho no 'FILE_PATH' acima."
            echo "Arquivos no diretório atual:"
            ls -la ./
            echo "Arquivos no diretório 'js/' (se existir):"
            ls -la js/ || true # '|| true' evita erro se a pasta 'js/' não existir
            exit 1 # Falha o workflow se o arquivo não for encontrado
          fi

      - name: Setup Pages # Ação para configurar o GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact # Ação para empacotar os arquivos do site
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.' # Envia todo o conteúdo do repositório (ajuste se necessário, ex: 'dist/')

      - name: Deploy to GitHub Pages # Ação para fazer o deploy no GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
