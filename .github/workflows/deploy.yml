name: Deploy PilhIA Frontend to GitHub Pages

on:
  push:
    branches:
      - main # Dispara o workflow quando há um push na branch 'main'

  # Permite executar este workflow manualmente pela aba Actions do GitHub
  workflow_dispatch:

# Define permissões para o GITHUB_TOKEN. Isso é necessário para o GitHub Pages.
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # O sistema operacional que será usado para rodar os passos

    steps:
    - name: Checkout code # Pega o seu código do repositório
      uses: actions/checkout@v3

    - name: Set up Node.js # Configura o ambiente Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18' # Use a versão do Node.js que seu projeto utiliza
        cache: 'npm' # Habilita cache para node_modules, o que acelera builds futuros

    - name: Install dependencies # Instala as bibliotecas que seu projeto precisa (do package.json)
      run: npm install

    # ATENÇÃO: AQUI ESTÁ A MUDANÇA CRUCIAL!
    # Passamos o segredo OPENROUTER_API_KEYS como uma variável de ambiente
    # para o comando de build do Vite.
    # O Vite automaticamente reconhece variáveis que começam com VITE_
    # e as injeta no seu código JavaScript.
    - name: Build project with Vite
      run: npm run build # Este comando executa 'vite build' definido no seu package.json
      env:
        # Esta linha expõe o segredo do GitHub como uma variável de ambiente
        # que o Vite irá ler durante o processo de build.
        VITE_OPENROUTER_API_KEYS: ${{ secrets.OPENROUTER_API_KEYS }}

    - name: Setup Pages
      uses: actions/configure-pages@v5 # Esta ação configura o ambiente para o GitHub Pages

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist' # Caminho da pasta de build do Vite. Geralmente 'dist'.

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 # Esta ação realmente faz o deploy para o Pages
