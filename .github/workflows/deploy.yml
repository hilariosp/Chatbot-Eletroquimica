name: Build and Deploy Chatbot

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Baixa o código do seu repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura o ambiente Node.js para rodar o script
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Usa a versão 20 do Node.js

      # 3. Roda um script Node.js para encontrar e substituir a chave de forma segura
      - name: Replace API Key Placeholder
        env:
          # Passa o secret do GitHub para o ambiente do script
          API_KEY_SECRET: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          node -e "
            const fs = require('fs');
            const filePath = 'js/chatbot.js';
            console.log('--- Iniciando substituição da chave de API em', filePath);
            
            const content = fs.readFileSync(filePath, 'utf8');
            const placeholder = '%%OPENROUTER_API_KEY_PLACEHOLDER%%';
            const apiKey = process.env.API_KEY_SECRET;

            if (!apiKey || apiKey.length < 10) {
              console.error('ERRO: A chave de API (secret) não está disponível ou é inválida. Verifique os secrets do seu repositório.');
              process.exit(1);
            }

            if (content.includes(placeholder)) {
              const newContent = content.replace(placeholder, apiKey);
              fs.writeFileSync(filePath, newContent, 'utf8');
              console.log('SUCESSO: A chave de API foi substituída no arquivo.');
            } else {
              console.error('ERRO: O placeholder %%OPENROUTER_API_KEY_PLACEHOLDER%% não foi encontrado no arquivo', filePath);
              process.exit(1);
            }
          "
      
      # 4. Faz o deploy para o GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .